create type categories_name as enum ('MISC', 'CREDIT_CARD', 'RECURRING_SPENDS', 'SAVING');

alter type categories_name owner to postgres;

create table categories
(
    date timestamp(6) not null,
    id   bigint generated by default as identity
        primary key,
    name varchar(255) not null
        constraint categories_name_check
            check ((name)::text = ANY
                   ((ARRAY ['MISC'::character varying, 'CREDIT_CARD'::character varying, 'RECURRING_SPENDS'::character varying, 'SAVING'::character varying])::text[]))
);

alter table categories
    owner to postgres;

create table transactions
(
    amount      numeric(38, 2) not null,
    recurring   boolean        not null,
    category_id bigint         not null
        constraint fksqqi7sneo04kast0o138h19mv
            references categories,
    date        timestamp(6)   not null,
    id          bigint generated by default as identity
        primary key,
    description varchar(255)   not null
);

alter table transactions
    owner to postgres;

create table recurring_transactions
(
    active         boolean      not null,
    created_date   timestamp(6) not null,
    id             bigint generated by default as identity
        primary key,
    paid_date      timestamp(6) not null,
    transaction_id bigint       not null
        unique
        constraint fkfqjfg0lv4aacrmt4p8teiqakd
            references transactions
);

alter table recurring_transactions
    owner to postgres;